<UserControl x:Class="D3ApiDotNet.WpfUI.Views.StatsHeroView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sampleData="clr-namespace:D3ApiDotNet.WpfUI.SampleData"
             xmlns:styles="clr-namespace:D3ApiDotNet.WpfUI.Assets.Styles"
             mc:Ignorable="d" 
             d:HorizontalAlignment="Center" d:VerticalAlignment="Center">

    <d:UserControl.DataContext>
        <sampleData:StatsHeroViewModelSampleData />
    </d:UserControl.DataContext>

    <UserControl.Resources>
        <styles:HeroStatsStyle />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" MinWidth="200">
            <TextBlock Text="{Binding Path=HeroViewModel.ActualHero.Name, FallbackValue=''}" FontFamily="Segoe UI Light" FontSize="20" TextWrapping="Wrap"/>

            <!-- TODO: ich finde es nicht gut, hier ein grid zu verwenden. mir würde ein vertikales stackpanel besser gefallen. ist flexibler beim erweitern -->

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding StringFormat='Level: {0}', Path=HeroViewModel.ActualHero.Level, FallbackValue=''}" FontSize="14" />
                <TextBlock Grid.Column="1" Text="{Binding StringFormat=' ({0})', Path=HeroViewModel.ActualHero.ParagonLevel, FallbackValue=''}" FontSize="14" Foreground="LightSkyBlue" />
                <TextBlock Grid.Column="2" Text="{Binding Path=HeroViewModel.ActualHero.HeroClass, FallbackValue=''}" HorizontalAlignment="Right" VerticalAlignment="Center"
                           Foreground="{Binding Path=HeroViewModel.ActualHero.HeroClass, Converter={StaticResource HeroClassColorConverter}, FallbackValue={x:Null}}"/>
            </Grid>
            <StackPanel Margin="0,10,0,0">
                <Grid>
                    <TextBlock Text="Profile Dps:" Style="{DynamicResource AttributeNameStyle}"/>
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=HeroViewModel.ActualHero.Stats.Damage, FallbackValue=''}" Style="{DynamicResource NumberValueStyle}" />
                </Grid>

                <Grid>
                    <TextBlock Text="Elites killed:" Style="{DynamicResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:0,0}', Path=HeroViewModel.ActualHero.Kills.Elites, FallbackValue=''}" Style="{DynamicResource NumberValueStyle}" />
                </Grid>

                <!-- neu eingefügt: berechnete Werte -->
                <Grid>
                    <TextBlock Text="Calculated Damage:" Style="{StaticResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=DamageTerms.DamageTerm, Converter={StaticResource TermEvaluateConverter}, FallbackValue='', UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NumberValueStyle}" />
                </Grid>

                <Grid>
                    <TextBlock Text="Weapon Dmg:" Style="{StaticResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=DamageTerms.WeaponDmgTerm, Converter={StaticResource TermEvaluateConverter}, FallbackValue='', UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NumberValueStyle}" />
                </Grid>

                <Grid>
                    <TextBlock Text="Weapon Aps:" Style="{StaticResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=DamageTerms.WeaponApsTerm, Converter={StaticResource TermEvaluateConverter}, FallbackValue='', UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NumberValueStyle}" />
                </Grid>

                <Grid>
                    <TextBlock Text="Weapon Dps:" Style="{StaticResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=DamageTerms.WeaponDpsTerm, Converter={StaticResource TermEvaluateConverter}, FallbackValue='', UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NumberValueStyle}" />
                </Grid>

                <Grid>
                    <TextBlock Text="Ehp:" Style="{StaticResource AttributeNameStyle}" />
                    <TextBlock Text="{Binding StringFormat='{}{0:n}', Path=EhpTerms.EhpTerm, Converter={StaticResource TermEvaluateConverter}, FallbackValue='', UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NumberValueStyle}" />
                </Grid>
            </StackPanel>
        </StackPanel>
        <TextBlock Grid.Row="1" Text="{Binding StringFormat='Last updated: {0:G}', Path=HeroViewModel.ActualHero.LastUpdated, FallbackValue=''}" 
                       Foreground="Gray" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5" TextWrapping="Wrap"/>
    </Grid>
</UserControl>
